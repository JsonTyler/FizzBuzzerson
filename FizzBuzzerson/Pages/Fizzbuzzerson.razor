@page "/"

<h5>Project Background: FizzBuzzerson</h5>

<p>
    Project Background: Below is a project inspired by Coder Foundry's youtube <a href="https://www.youtube.com/watch?v=zOY5a-J0t6E">video</a>.
    In the world of software engineering "fizz buzz" is known to most as an interview challenge problem given to test if a
    programmer has any basic software skills. All that is required is the knowledge of basic concepts like variables, conditionals,
    and the modulus operator. I was inspired by Coder Foundry's video as well as my preparation for my first interview experience
    back in 2017 with Lockheed Martin where I first became aware of what Fizz Buzz even was.
</p>
<h5>Further Reading on Fizzbuzz: </h5>
<ul>
    <li><a href="https://blog.usejournal.com/about-coding-the-fizzbuzz-interview-question-9bcd08d9dfe5">Blog Article on FizzBuzz</a></li>
</ul>

<h5>Demo</h5>
<div class="container-fluid bg-dark text-light">

    <div class="row py-1 ">
        <div class="col-12">Fizz Value: </div>
    </div>
    <div class="row ">
        <div class="col-12">
            <input class="form-control" type="number" @bind="@FizzValue" />
            <small class="text-muted">(Enter a value between 1-100)</small>
        </div>
    </div>
    <div class="row pt-1 ">
        <div class="col-12">Buzz Value: </div>
    </div>
    <div class="row ">
        <div class="col-12">
            <input class="form-control" type="number" @bind="@BuzzValue" />
            <small class="text-muted">(Enter a value between 1-100)</small>
        </div>
    </div>
    <div class="row py-2">
        <div class="col">
            <button class="btn btn-outline-danger @disabler" @onclick="SmashIt"><span class="oi oi-bug"></span></button>
            <button class="btn btn-success" @onclick="FizzBuzzIt">FizzBuzz It</button>
        </div>
    </div>
        @if (buzzItems.Count() > 0)
        {

            <div class="row pt-5 mx-3">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover table-sm px-3">
                        <thead>
                            <tr><th class="bg-dark text-white" colspan="10">FizzBuzz Results</th></tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < 100; i += 10)
                            {
                                <tr>
                                    <td class="@buzzItems[i].ClassName">@buzzItems[i].Value</td>
                                    <td class="@buzzItems[i+1].ClassName">@buzzItems[i + 1].Value</td>
                                    <td class="@buzzItems[i+2].ClassName">@buzzItems[i + 2].Value</td>
                                    <td class="@buzzItems[i+3].ClassName">@buzzItems[i + 3].Value</td>
                                    <td class="@buzzItems[i+4].ClassName">@buzzItems[i + 4].Value</td>
                                    <td class="@buzzItems[i+5].ClassName">@buzzItems[i + 5].Value</td>
                                    <td class="@buzzItems[i+6].ClassName">@buzzItems[i + 6].Value</td>
                                    <td class="@buzzItems[i+7].ClassName">@buzzItems[i + 7].Value</td>
                                    <td class="@buzzItems[i+8].ClassName">@buzzItems[i + 8].Value</td>
                                    <td class="@buzzItems[i+9].ClassName">@buzzItems[i + 9].Value</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </div>




@code {

    string disabler = "disabled btn-outline-danger";

    List<BuzzItem> buzzItems = new List<BuzzItem>();

    private int FizzValue = 3;
    private int BuzzValue = 5;
    private int Milliseconds = 2000;

    bool Fizz = false;
    bool Buzz = false;

    protected bool IsDisabled { get; set; }

    void FizzBuzzIt()
    {
        if (buzzItems.Count > 0)
        {
            buzzItems.Clear();
        }

        for (var i = 1; i <= 100; i++)
        {
            Fizz = (i % FizzValue == 0);
            Buzz = (i % BuzzValue == 0);

            if (Fizz && Buzz)
            {
                buzzItems.Add(new BuzzItem { Value = "FizzBuzz", ClassName = "fizzBuzz" });
            }
            else if (Fizz)
            {
                buzzItems.Add(new BuzzItem { Value = "Fizz", ClassName = "fizz" });
            }
            else if (Buzz)
            {
                buzzItems.Add(new BuzzItem { Value = "Buzz", ClassName = "buzz" });
            }
            else
            {
                buzzItems.Add(new BuzzItem { Value = i.ToString(), ClassName = "noBuzz" });
            }

        }
        disabler = "bg-success btn-outline-success";





    }

    void SmashIt()
    {
        for (var i = 1; i <= 100; i++)
        {
            Fizz = (i % FizzValue == 0);
            Buzz = (i % BuzzValue == 0);

            if (Fizz && Buzz)
            {
                buzzItems[i - 1].ClassName = "invisible";
                buzzItems[i - 1].Value = "";
                buzzItems[i - 1].ClassName = "visible bg-dark bugs";

            }
        }

        disabler = "disabled";
    }


    class BuzzItem
    {
        public string Value { get; set; }
        public string ClassName { get; set; }
    }
}
